#!/bin/bash

set -e

mkdir ${HOME}/.bitcore
root_dir="${HOME}/.bitcore"
platform=`uname -a | awk '{print tolower($1)}'`
arch=`uname -m`
version="0.12.2"
#also see: https://colossuscoinxt.org/2017/10/phore-masternode-install-guide-v2-0-vpslinux/
url="https://github.com/phoreproject/Phore/releases/download/v1.6.0/phore-1.6.0-x86_64-linux-gnu.tar.gz"

#Install phore daemon, cli
wget ${url}
tar -xvzf phore-1.6.0-x86_64-linux-gnu.tar.gz
mv phore-1.6.0/bin/phore* ${root_dir}/data/

#Check wheter phore daemon was installed
echo "please manually install phore into ./.bitcore/data/: ${url}"
if [ ! -f ./.bitcore/data/phore-cli ] && [ ! -f ./.bitcore/data/phore-cli.exe ]; then
  echo "can't continue without phore-cli being installed!"
  exit -1
fi
if [ ! -f ./.bitcore/data/phored ] && [ ! -f ./.bitcore/data/phored.exe ]; then
  echo "can't continue without phored being installed!"
  exit -1
fi

# if [ "${platform}" == "linux" ]; then
#     if [ "${arch}" == "x86_64" ]; then
#         tarball_name="ColossusCoinXT_LinuxV1.0.zip"
#     fi
# else
#     echo "phore binary distribution not available for platform and architecture"
#     exit -1
# fi

# binary_url="${url}/${tarball_name}"
# shasums_url="${url}/SHA256SUMS.asc"

# download_bitcoind() {

#     mkdir -p "${root_dir}"
#     mkdir -p "${root_dir}/data"

#     cd "${root_dir}/data"

#     echo "Downloading phore: ${binary_url}"

#     is_curl=true
#     if hash curl 2>/dev/null; then
#         curl --fail -I $binary_url >/dev/null 2>&1
#     else
#         is_curl=false
#         wget --server-response --spider $binary_url >/dev/null 2>&1
#     fi

#     if test $? -eq 0; then
#         if [ "${is_curl}" = true ]; then
#             curl -L $binary_url > $tarball_name
#             curl -L $shasums_url > SHA256SUMS.asc
#         else
#             wget $binary_url
#             wget $shasums_url
#         fi
#         if test -e "${tarball_name}"; then
#             echo "Unpacking phore distribution"
#             tar -xvzf $tarball_name
#             if test $? -eq 0; then
#                 ln -sf "phorecore-${version}/bin/phored"
#                 return;
#             fi
#         fi
#     fi
#     echo "phore binary distribution could not be downloaded"
#     exit -1
# }

# verify_download() {
#     echo "Verifying signatures of phore download"
#     gpg --verify "${root_dir}/bin/SHA256SUMS.asc"

#     if hash shasum 2>/dev/null; then
#         shasum_cmd="shasum -a 256"
#     else
#         shasum_cmd="sha256sum"
#     fi

#     download_sha=$(${shasum_cmd} "${root_dir}/bin/${tarball_name}" | awk '{print $1}')
#     expected_sha=$(cat "${root_dir}/bin/SHA256SUMS.asc" | grep "${tarball_name}" | awk '{print $1}')
#     echo "Checksum (download): ${download_sha}"
#     echo "Checksum (verified): ${expected_sha}"
#     if [ "${download_sha}" != "${expected_sha}" ]; then
#         echo -e "\033[1;31mChecksums did NOT match!\033[0m\n"
#         exit 1
#     else
#         echo -e "\033[1;32mChecksums matched!\033[0m\n"
#     fi
# }

# download=1
# verify=0

# if [ "${SKIP_BITCOIN_DOWNLOAD}" = 1 ]; then
#     download=0;
# fi

# if [ "${VERIFY_BITCOIN_DOWNLOAD}" = 1 ]; then
#     verify=1;
# fi

# while [ -n "$1" ]; do
#   param="$1"
#   value="$2"

#   case $param in
#     --skip-bitcoin-download)
#           download=0
#           ;;
#     --verify-bitcoin-download)
#           verify=1
#           ;;
#   esac
#   shift
# done

# if [ "${download}" = 1 ]; then
#     download_bitcoind
# fi

# if [ "${verify}" = 1 ]; then
#     verify_download
# fi

exit 0
